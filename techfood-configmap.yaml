apiVersion: v1
kind: ConfigMap
metadata:
    name: techfood-configmap
data:
    SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres-service:5432/techfood"
    SPRING_DATASOURCE_USERNAME: "postgres"
    SPRING_DATASOURCE_PASSWORD: "postgres"
    MERCADO_PAGO_ACCESS_TOKEN: "TEST-2213950456005801-072918-9aad925fb9c6394311ca614e4d6a53d0-144057446"
    MERCADO_PAGO_DEFAULT_PAYER_EMAIL: ""
    TECHFOOD_API_URL: ""
    SPRING_PROFILES_ACTIVE: "prod"
    schema.sql: |
      CREATE TABLE IF NOT EXISTS tb_products (
                                                 category SMALLINT NOT NULL,
                                                 price NUMERIC(38, 2) NOT NULL,
          id UUID NOT NULL,
          description VARCHAR(255) NOT NULL,
          imageurl VARCHAR(255) NOT NULL,
          name VARCHAR(255) NOT NULL,
          CONSTRAINT tb_products_pkey PRIMARY KEY (id),
          CONSTRAINT tb_products_category_check CHECK (category >= 0 AND category <= 4)
          );
      CREATE TABLE IF NOT EXISTS tb_clients (
                                                id UUID NOT NULL,
                                                cpf VARCHAR(255) NOT NULL,
          email VARCHAR(255) NOT NULL,
          name VARCHAR(255) NOT NULL,
          CONSTRAINT tb_clients_pkey PRIMARY KEY (id),
          CONSTRAINT tb_clients_cpf_key UNIQUE (cpf),
          CONSTRAINT tb_clients_email_key UNIQUE (email)
          );
      CREATE TABLE IF NOT EXISTS tb_orders (
                                               is_anonymous BOOLEAN,
                                               status INTEGER NOT NULL,
                                               creation_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                               last_update_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                               client_id UUID,
                                               id UUID NOT NULL,
                                               name VARCHAR(255) NOT NULL,
          CONSTRAINT tb_orders_pkey PRIMARY KEY (id),
          CONSTRAINT fk_order_client FOREIGN KEY (client_id) REFERENCES tb_clients (id) ON UPDATE NO ACTION ON DELETE NO ACTION
          );
      CREATE TABLE IF NOT EXISTS tb_order_items (
                                                    quantity INTEGER NOT NULL,
                                                    order_id UUID NOT NULL,
                                                    product_id UUID NOT NULL,
                                                    description VARCHAR(255),
          CONSTRAINT tb_order_items_pkey PRIMARY KEY (order_id, product_id),
          CONSTRAINT fk_order_item_order FOREIGN KEY (order_id) REFERENCES tb_orders (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
          CONSTRAINT fk_order_item_product FOREIGN KEY (product_id) REFERENCES tb_products (id) ON UPDATE NO ACTION ON DELETE NO ACTION
          );